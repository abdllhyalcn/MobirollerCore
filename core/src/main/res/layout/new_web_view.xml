<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:id="@+id/main_layout"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical">

    <RelativeLayout
        android:id="@+id/inner_layout"
        android:layout_width="match_parent"
        android:layout_height="match_parent">

        <RelativeLayout
            android:id="@+id/web_layout"
            android:layout_width="match_parent"
            android:layout_height="match_parent">

            <LinearLayout
                android:id="@+id/nonVideoLayout"
                android:layout_width="match_parent"
                android:layout_height="match_parent">

                <com.mobiroller.core.views.VideoEnabledWebView
                    android:id="@+id/web_view"
                    android:layout_width="match_parent"
                    android:layout_height="match_parent" />

            </LinearLayout>
        </RelativeLayout>
        <!-- View where the video will be shown when video goes fullscreen -->
        <RelativeLayout
            android:id="@+id/videoLayout"
            android:layout_width="match_parent"
            android:layout_height="match_parent">

            <!-- View that will be shown while the fullscreen video loads. For example you could include
            a "Loading..." message. However, in this particular example this view is actually defined in
            view_loading_video.xml and inflated programmatically in ExampleActivity.java. The reason for
            this is to keep the main layout (this file) cleaner. -->
            <!-- <View
                android:id="@+id/videoLoading"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_centerInParent="true"
                android:visibility="invisible" /> -->

        </RelativeLayout>
    </RelativeLayout>
</RelativeLayout>